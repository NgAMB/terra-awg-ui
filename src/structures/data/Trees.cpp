#include "structures/data/Trees.h"

#include <cassert>

namespace
{
// clang-format off
uint16_t mushroom1[] = {
    0, 4096, 5, 66, 0, 7, 4096, 5, 22, 242, 4096, 5, 110, 88, 4096, 5, 22, 22,
    4096, 5, 0, 0, 4096, 5, 22, 66, 4096, 5, 44, 66, 4097, 5, 0, 22, 4096, 5,
    44, 66, 4096, 5, 0, 44, 0, 4096, 5, 66, 242, 7
};

uint16_t mushroom2[] = {
    0, 4096, 5, 66, 0, 3, 4096, 5, 66, 0, 3, 4096, 5, 22, 220, 4096, 5, 88, 22,
    4096, 5, 0, 44, 4096, 5, 0, 22, 4096, 5, 44, 88, 4096, 5, 66, 110, 4096, 5,
    88, 22, 4096, 5, 22, 66, 4096, 5, 22, 88, 4096, 5, 44, 88, 4096, 5, 0, 132,
    4, 4096, 5, 88, 66, 3, 4096, 5, 22, 176
};

uint16_t mushroom3[] = {
    0, 4096, 5, 66, 0, 0, 4096, 5, 66, 44, 5, 4096, 5, 22, 220, 4096, 5, 88,
    22, 4096, 5, 0, 0, 4096, 5, 110, 110, 4096, 5, 0, 44, 4096, 5, 66, 110,
    4097, 5, 0, 0, 4096, 5, 0, 110, 4096, 5, 0, 22, 2, 4096, 5, 88, 66, 0,
    4096, 5, 88, 110, 3
};

uint16_t mushroom4[] = {
    4, 4096, 5, 44, 154, 4096, 5, 22, 220, 4096, 5, 0, 44, 4096, 5, 44, 66,
    4096, 5, 22, 110, 4096, 5, 0, 88, 4096, 5, 66, 132, 5
};

uint16_t mushroom5[] = {
    7, 4096, 5, 44, 132, 4096, 5, 22, 242, 4097, 5, 0, 0, 4096, 5, 66, 110,
    4096, 5, 0, 22, 4096, 5, 22, 110, 4096, 5, 0, 22, 4096, 5, 22, 110, 4096,
    5, 66, 154, 2, 4096, 5, 88, 88, 4
};

uint16_t mushroom6[] = {
    0, 4096, 5, 44, 242, 4, 4096, 5, 66, 22, 0, 4096, 5, 44, 132, 4096, 5, 0,
    220, 4096, 5, 88, 22, 4096, 5, 0, 44, 4096, 5, 0, 22, 4096, 5, 22, 110,
    4096, 5, 22, 22, 4096, 5, 22, 66, 4096, 5, 88, 44, 4096, 5, 44, 66, 4096,
    5, 66, 176, 9
};

uint16_t mushroom7[] = {
    0, 4096, 5, 66, 0, 1, 4096, 5, 44, 132, 4096, 5, 22, 242, 4096, 5, 88, 22,
    4096, 5, 66, 88, 4096, 5, 44, 110, 4096, 5, 88, 132, 1, 4096, 5, 66, 198,
    0, 4096, 5, 22, 176
};

uint16_t mushroom8[] = {
    6, 4096, 5, 66, 22, 0, 4096, 5, 44, 198, 0, 4096, 5, 66, 44, 0, 4096, 5,
    44, 132, 4096, 5, 0, 220, 4096, 5, 0, 44, 4096, 5, 44, 66, 4096, 5, 66, 88,
    4096, 5, 22, 88, 4096, 5, 66, 88, 4096, 5, 0, 44, 4096, 5, 88, 22, 4096, 5,
    44, 110, 4096, 5, 110, 66, 4096, 5, 44, 110, 4096, 5, 88, 44, 4096, 5, 0,
    22, 4096, 5, 66, 132, 2, 4096, 5, 66, 198, 0, 4096, 5, 66, 198, 2, 4096, 5,
    66, 220, 3
};

uint16_t mushroom9[] = {
    2, 4096, 5, 66, 22, 1, 4096, 5, 44, 154, 4096, 5, 22, 242, 4096, 5, 66, 66,
    4096, 5, 0, 22, 4096, 5, 110, 66, 4096, 5, 0, 0, 4096, 5, 22, 0, 4096, 5,
    88, 154, 0, 4096, 5, 88, 66, 0, 4096, 5, 66, 198, 1, 4096, 5, 22, 132
};

uint16_t mushroom10[] = {
    1, 4096, 5, 44, 198, 1, 4096, 5, 22, 242, 4096, 5, 0, 22, 4096, 5, 88, 22,
    4096, 5, 22, 110, 4096, 5, 0, 176, 3, 4096, 5, 22, 132
};

uint16_t mushroom11[] = {
    0, 4096, 5, 66, 0, 2, 4096, 5, 22, 198, 4096, 5, 110, 110, 4096, 5, 22,
    110, 4096, 5, 22, 88, 4096, 5, 0, 154, 0, 4096, 5, 66, 242, 1, 4096, 5, 22,
    154
};

uint16_t mushroom12[] = {
    2, 4096, 5, 44, 220, 3, 4096, 5, 66, 22, 4096, 5, 44, 154, 4096, 5, 22,
    242, 4096, 5, 0, 22, 4096, 5, 66, 66, 4096, 5, 88, 44, 4096, 5, 0, 22,
    4096, 5, 0, 0, 4096, 5, 22, 66, 4096, 5, 0, 0, 4096, 5, 88, 22, 4096, 5,
    66, 132, 1, 4096, 5, 66, 198, 6
};

uint16_t mushroom13[] = {
    3, 4096, 5, 66, 22, 4, 4096, 5, 44, 132, 4096, 5, 22, 198, 4096, 5, 44, 66,
    4096, 5, 22, 110, 4096, 5, 22, 22, 4096, 5, 110, 88, 4096, 5, 22, 88, 4096,
    5, 44, 88, 4096, 5, 0, 44, 4096, 5, 0, 110, 4096, 5, 0, 44, 4096, 5, 66,
    176, 3, 4096, 5, 88, 88, 5
};

uint16_t mushroom14[] = {
    5, 4096, 5, 66, 44, 4096, 5, 44, 154, 4096, 5, 22, 220, 4096, 5, 0, 0,
    4096, 5, 22, 66, 4096, 5, 0, 44, 4097, 5, 0, 0, 4096, 5, 110, 88, 4096, 5,
    88, 176, 5, 4096, 5, 66, 220, 4096, 5, 22, 154
};

uint16_t mushroom15[] = {
    0, 4096, 5, 44, 198, 0, 4096, 5, 44, 198, 0, 4096, 5, 44, 132, 4096, 5, 22,
    220, 4096, 5, 88, 22, 4096, 5, 44, 66, 4096, 5, 88, 44, 4096, 5, 66, 88,
    4096, 5, 66, 132, 3, 4096, 5, 88, 88, 0
};

uint16_t mushroom16[] = {
    1, 4096, 5, 44, 198, 7, 4096, 5, 44, 132, 4096, 5, 22, 242, 4096, 5, 22,
    44, 4096, 5, 110, 110, 4096, 5, 0, 88, 4096, 5, 0, 0, 4096, 5, 66, 110,
    4096, 5, 44, 88, 4096, 5, 22, 44, 4096, 5, 44, 110, 4096, 5, 0, 0, 4096, 5,
    22, 66, 4096, 5, 66, 154, 1, 4096, 5, 66, 242, 1, 4096, 5, 66, 220, 5
};
// clang-format on
} // namespace

namespace Data
{

TileBuffer getTree(Tree treeId, const std::vector<bool> &framedTiles)
{
    switch (treeId) {
    case Tree::mushroom1:
        return {3, 10, mushroom1, framedTiles};
    case Tree::mushroom2:
        return {3, 11, mushroom2, framedTiles};
    case Tree::mushroom3:
        return {3, 10, mushroom3, framedTiles};
    case Tree::mushroom4:
        return {3, 6, mushroom4, framedTiles};
    case Tree::mushroom5:
        return {3, 9, mushroom5, framedTiles};
    case Tree::mushroom6:
        return {3, 10, mushroom6, framedTiles};
    case Tree::mushroom7:
        return {3, 5, mushroom7, framedTiles};
    case Tree::mushroom8:
        return {3, 14, mushroom8, framedTiles};
    case Tree::mushroom9:
        return {3, 7, mushroom9, framedTiles};
    case Tree::mushroom10:
        return {3, 5, mushroom10, framedTiles};
    case Tree::mushroom11:
        return {3, 5, mushroom11, framedTiles};
    case Tree::mushroom12:
        return {3, 10, mushroom12, framedTiles};
    case Tree::mushroom13:
        return {3, 11, mushroom13, framedTiles};
    case Tree::mushroom14:
        return {3, 8, mushroom14, framedTiles};
    case Tree::mushroom15:
        return {3, 6, mushroom15, framedTiles};
    case Tree::mushroom16:
        return {3, 12, mushroom16, framedTiles};
    }
    assert(false);
}

} // namespace Data
